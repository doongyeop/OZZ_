input {
  jdbc {
    jdbc_driver_library => "/usr/share/logstash/logstash-core/lib/jars/mysql-connector-java-8.3.0.jar"
    jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://mysql:3306/ozz"
    jdbc_user => "${DB_USER}"
    jdbc_password => "${DB_PW}"
    jdbc_paging_enabled => true
    schedule => "*/15 * * * * *"  # 매 15초마다 실행
    statement => "SELECT clothes_id,c.name,size,fit,memo,brand,
                         purchase_date,purchase_site,
                         created_date,updated_date,
                         image_file_id, c.category_low_id, cl.category_high_id, user_id,
                         CAST(color AS UNSIGNED) AS color,
                         CAST(texture AS UNSIGNED) AS texture,
                         CAST(style AS UNSIGNED) AS style,
                         CAST(season AS UNSIGNED) AS season,
                         CAST(pattern AS UNSIGNED) AS pattern
                 FROM clothes c
                 LEFT OUTER JOIN category_low as cl
                 using(category_low_id)
                 WHERE updated_date > :sql_last_value"
    use_column_value => true
    tracking_column => "updated_date"
    tracking_column_type => "timestamp"
    clean_run => false
  }
}

#filter {
#  ruby {
#    code => '
#      require "net/http"
#      require "uri"
#      require "json"
#
#      uri = URI.parse("http://ozz-ai:#{ENV["AI_PORT"]}/vectorize")
#      request = Net::HTTP::Post.new(uri, "Content-Type" => "application/json")
#      request.body = {"text" => event.get("name")}.to_json
#
#      response = Net::HTTP.start(uri.hostname, uri.port) do |http|
#        http.request(request)
#      end
#
#      if response.code == "200"
#        event.set("vector", JSON.parse(response.body)["vector"])
#        event.set("status", "published")
#      else
#        event.set("vector", "error")
#        event.set("status", "error")
#      end
#    '
#  }
#}

output {
  stdout { codec => rubydebug }
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "ozz_clothes"
    document_id => "%{clothes_id}"
  }
}