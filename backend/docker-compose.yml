version: '3.1'

services:
  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - spring-cloud-network

  mysql-db:
    image: mysql:latest
    container_name: mysql
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ssafy
      MYSQL_DATABASE: ozz
      MYSQL_USER: ssafy
      MYSQL_PASSWORD: ssafy
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - spring-cloud-network
# OZZ 설정
  ozz-eureka:
    container_name: ozz-eureka
    build: ./eureka
    ports:
      - "8761:8761"
    environment:
      SPRING_PROFILES_ACTIVE: dev
    networks:
      - spring-cloud-network

  ozz-clothes:
    container_name: ozz-clothes
    build: ./clothes
    ports:
      - ${CLOTHES_PORT}:${CLOTHES_PORT}
    environment:
      CLOTHES_PORT: ${CLOTHES_PORT}
      SPRING_PROFILES_ACTIVE: dev
      EUREKA_CLIENT_SERVICE_URL_DEFAULT_ZONE: http://ozz-eureka:8761/eureka/
      DB_URL: jdbc:mysql://mysql-db:3306/ozz
      DB_USER: ${DB_USER}
      DB_PW: ${DB_PW}
      SPRING_ELASTICSEARCH_URLS: http://elasticsearch:9200
      SPRING_ELASTICSEARCH_USERNAME: ${SPRING_ELASTICSEARCH_USERNAME}
      SPRING_ELASTICSEARCH_PASSWORD: ${SPRING_ELASTICSEARCH_PASSWORD}
      FASTAPI_URL: http://ozz-ai:${AI_PORT}
      RABBITMQ_HOST: rabbitmq
    networks:
      - spring-cloud-network
      - message-queue-network
    depends_on:
      - mysql-db
      - ozz-eureka
      - ozz-file
      - elasticsearch

  ozz-file:
    container_name: ozz-file
    build: ./file-server
    ports:
      - ${FILE_PORT}:${FILE_PORT}
    volumes:
      - file-data:/data/uploads
    environment:
      FILE_PORT: ${FILE_PORT}
      SPRING_PROFILES_ACTIVE: dev
      EUREKA_CLIENT_SERVICE_URL_DEFAULT_ZONE: http://ozz-eureka:8761/eureka/
      DB_URL: jdbc:mysql://mysql-db:3306/ozz
      DB_USER: ${DB_USER}
      DB_PW: ${DB_PW}
      FILE_UPLOAD_DIR: /data/uploads
    networks:
      - spring-cloud-network
    depends_on:
      - mysql-db
      - ozz-eureka

  ozz-auth:
    container_name: ozz-auth
    build: ./auth
    ports:
      - ${AUTH_PORT}:${AUTH_PORT}
    environment:
      AUTH_PORT: ${AUTH_PORT}
      SPRING_PROFILES_ACTIVE: dev
      EUREKA_CLIENT_SERVICE_URL_DEFAULT_ZONE: http://ozz-eureka:8761/eureka/
      DB_URL: jdbc:mysql://mysql-db:3306/ozz
      DB_USER: ${DB_USER}
      DB_PW: ${DB_PW}
      NAVER_REDIRECT_URL: http://${SERVER_HOST}:${AUTH_PORT}/login/oauth2/code/naver
      KAKAO_REDIRECT_URL: http://${SERVER_HOST}:${AUTH_PORT}/login/oauth2/code/kakao
      REDIS_HOST: redis
    networks:
      - spring-cloud-network
    depends_on:
      - mysql-db
      - ozz-eureka
      - redis

  ozz-user:
    container_name: ozz-user
    build: ./user
    ports:
      - ${USER_PORT}:${USER_PORT}
    environment:
      USER_PORT: ${USER_PORT}
      SPRING_PROFILES_ACTIVE: dev
      EUREKA_CLIENT_SERVICE_URL_DEFAULT_ZONE: http://ozz-eureka:8761/eureka/
      DB_URL: jdbc:mysql://mysql-db:3306/ozz
      DB_USER: ${DB_USER}
      DB_PW: ${DB_PW}
    networks:
      - spring-cloud-network
    depends_on:
      - mysql-db
      - ozz-eureka
      - ozz-auth
      - redis

  ozz-ai:
    container_name: ozz-ai
    build: ./ai
    environment:
      - AI_PORT=${AI_PORT}
      - RABBITMQ_HOST=rabbitmq
      - CLOTHES_ENDPOINT=http://ozz-clothes:${CLOTHES_PORT}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - FILE_HOST=http://ozz-file:${FILE_PORT}
    ports:
      - ${AI_PORT}:${AI_PORT}
    networks:
      - message-queue-network
      - spring-cloud-network

  ozz-favorite:
    container_name: ozz-favorite
    build: ./favorite
    ports:
      - ${FAVORITE_PORT}:${FAVORITE_PORT}
    environment:
      FAVORITE_PORT: ${FAVORITE_PORT}
      SPRING_PROFILES_ACTIVE: dev
      EUREKA_CLIENT_SERVICE_URL_DEFAULT_ZONE: http://ozz-eureka:8761/eureka/
      DB_URL: jdbc:mysql://mysql-db:3306/ozz
      DB_USER: ${DB_USER}
      DB_PW: ${DB_PW}
    networks:
      - spring-cloud-network
    depends_on:
      - ozz-eureka

  ozz-board:
    container_name: ozz-board
    build: ./board
    ports:
      - ${BOARD_PORT}:${BOARD_PORT}
    environment:
      BOARD_PORT: ${BOARD_PORT}
      SPRING_PROFILES_ACTIVE: dev
      EUREKA_CLIENT_SERVICE_URL_DEFAULT_ZONE: http://ozz-eureka:8761/eureka/
      DB_URL: jdbc:mysql://mysql-db:3306/ozz
      DB_USER: ${DB_USER}
      DB_PW: ${DB_PW}
    networks:
      - spring-cloud-network
    depends_on:
      - ozz-eureka

  ozz-gateway:
    container_name: ozz-gateway
    build: ./gateway
    ports:
      - ${API_GATEWAY_PORT}:${API_GATEWAY_PORT}
    environment:
      API_GATEWAY_PORT: ${API_GATEWAY_PORT}
      SPRING_PROFILES_ACTIVE: dev
      EUREKA_CLIENT_SERVICE_URL_DEFAULT_ZONE: http://ozz-eureka:8761/eureka/
      GATEWAY_HOST: http://ozz-gateway:${API_GATEWAY_PORT}
      AI_HOST: http://ozz-ai:${AI_PORT}
    networks:
      - spring-cloud-network
    depends_on:
      - ozz-ai
      - ozz-file
      - ozz-clothes
      - ozz-auth
      - ozz-user
      - ozz-favorite
      - ozz-board

# ELK 설정
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock= true
      - xpack.security.enabled= false
      - xpack.security.enrollment.enabled=false
      - xpack.license.self_generated.type=basic
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es-data:/usr/share/elasticsearch/data
      - ./es/elasticsearch/config/synonym/:/usr/share/elasticsearch/config/synonym/
    networks:
      - spring-cloud-network

  logstash:
    image: docker.elastic.co/logstash/logstash:8.14.3
    container_name: logstash
    environment:
      - http.host=0.0.0.0
      - http.port=9600
      - xpack.monitoring.enabled=true
      - xpack.monitoring.elasticsearch.hosts=["http://elasticsearch:9200"]
      - path.data=/usr/share/logstash/data
      - DB_USER=${DB_USER}
      - DB_PW=${DB_PW}
      - AI_PORT=${AI_PORT}
    volumes:
      - ./es/logstash/config/:/usr/share/logstash/config/
      - ./es/logstash/pipeline/:/usr/share/logstash/pipeline/
      - ./es/logstash/jars/mysql-connector-java-8.3.0.jar:/usr/share/logstash/logstash-core/lib/jars/mysql-connector-java-8.3.0.jar
    ports:
      - "5044:5044" # Beats input
      - "9600:9600" # Logstash monitoring API
    depends_on:
      - elasticsearch
      - ozz-ai
    networks:
      - spring-cloud-network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.3
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      ELASTICSEARCH_UTL : http://elasticsearch:9200
    #      ELASTICSEARCH_USERNAME: ssafy
    #      ELASTICSEARCH_PASSWORD: ssafy1234
    depends_on:
      - elasticsearch
    networks:
      - spring-cloud-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "15672:15672" # management page port
      - "5672:5672" # main port
    networks:
      - message-queue-network

volumes:
  mysql-data:
    driver: local
  file-data:
    driver: local
  es-data:
    driver: local

networks:
  spring-cloud-network:
    driver: bridge
  message-queue-network:
    driver: bridge
